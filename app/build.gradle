def versionNumber = 1
def versionBuildType = 0 // 0 debug 1 release
def keyReleasePassword = ''
def keystoreReleasePassword = ''
def realmDatabaseName = "vocabularycreator.realm";

if (project.hasProperty("versionBuildType")) {
    versionBuildType = Integer.parseInt(project.getProperty("versionBuildType"))
}
if (project.hasProperty("versionNumber")) {
    versionNumber = project.getProperty("versionNumber")
}
if (project.hasProperty("keyReleasePassword")) {
    keyReleasePassword = project.getProperty("keyReleasePassword")
}
if (project.hasProperty("keystoreReleasePassword")) {
    keystoreReleasePassword = project.getProperty("keystoreReleasePassword")
}

ext {
    versionMajor = versionBuildType
    versionMinor = 0
    versionPatch = versionNumber

    supportLibVersion = '25.3.1'
    daggerVersion = '2.9'
    retrofitVersion = '2.1.0'
    okhttp3Version = '3.4.1'
    butterknifeVersion = '8.4.0'
    espressoVersion = '2.2.2'
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.przemyslawlusnia.vocabularycreator"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode versionNumber.toInteger()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "REALM_DATABASE_NAME", "\"${realmDatabaseName}\""
    }

    signingConfigs {
        config {
            keyAlias 'vocabularycreator'
            keyPassword keyReleasePassword
            storeFile file('./przemyslawlusnia-keystore.jks')
            storePassword keystoreReleasePassword
        }
    }
    productFlavors {
        prod {
        }

        develop {
            applicationIdSuffix ".develop"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            testCoverageEnabled = true // gradlew createDevelopDebugCoverageReport
        }

        release {
            signingConfig signingConfigs.config
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

repositories {
    maven {
        url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo'
    }
    maven {
        url 'https://github.com/linchaolong/stetho-realm/raw/master/maven-repo'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"
    compile 'javax.annotation:jsr250-api:1.0' // used in Dagger generated classes

    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    compile "com.squareup.okhttp3:okhttp:${okhttp3Version}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttp3Version}"
    compile "com.jakewharton:butterknife:${butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknifeVersion}"
    compile 'io.reactivex:rxjava:1.2.3'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.facebook.stetho:stetho:1.4.2'
    compile 'com.uphyca:stetho_realm:2.0.1'
    compile 'org.immutables:value:2.4.2'
    compile 'com.jakewharton.timber:timber:4.5.1'
    // for google-services.json file configuration usage
    apply plugin: 'com.google.gms.google-services'
    compile 'com.google.firebase:firebase-crash:10.2.1'

    androidTestCompile("com.android.support.test.espresso:espresso-core:${espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.squareup', module: 'javawriter'
    })
    androidTestCompile "com.android.support:support-annotations:${supportLibVersion}"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    // Allows to work with RecyclerView, DatePicker, Drawer, Accessibility, CountingIdlingResource
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:${espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:1.5.1'
    // 2.2.0 is newer, but I don't need Mockito 2.x yet (2.2.0 implicitly add Mockito 2.x library).

    androidTestCompile "com.google.dagger:dagger:${daggerVersion}"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
}

task checkStyle(type: Checkstyle) {
    configFile = file("../config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    ignoreFailures = false
    classpath = files()
}
